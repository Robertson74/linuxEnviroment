# to.be.ok
snippet chai.ok
	expect(${1:false}).to.be.ok;${3}
endsnippet
snippet chai.notok
	expect(${1:true}).to.not.be.ok;${3}
endsnippet
snippet chai.eql
	expect(${1:null}).to.eql(${2:""});${3}
endsnippet
snippet chai.equal
	expect(${1:null}).to.equal(${2:""});${3}
endsnippet
snippet chai.iof
	expect(${1:null}).to.be.instanceof(${2:false});${3}
endsnippet
snippet chai.tohave
	expect(${1:null}).to.have.property(${2:"property"});${3}
endsnippet
snippet chai.tobe
	expect(${1:null}).to.be.a("${2:}");${3}
endsnippet

# fast .a(type) versions
snippet chai.bestr
	expect(${1:null}).to.be.a("string");${2}
endsnippet
snippet chai.bearray
	expect(${1:null}).to.be.a("array");${2}
endsnippet
snippet chai.beobj
	expect(${1:null}).to.be.a("object");${2}
endsnippet
snippet chai.benull
	expect(${1:""}).to.be.a("null");${2}
endsnippet
snippet chai.beun
	expect(${1:""}).to.be.a("undefined");${2}
endsnippet
