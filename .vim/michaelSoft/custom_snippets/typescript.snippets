snippet asynMeth "async class/object method" b
async ${1:methodName}(${2:args}: ${3:argType}): ${4:void} {
	${5://code}
}
endsnippet

snippet () "fat arrow iife"
((${1:}) => {
${2:// code}
})();
endsnippet

snippet void "void"
${3:let} ${1:varName}: void = "${2:text}";
endsnippet

snippet st "string"
${3:let} ${1:varName}: string = "${2:text}";
endsnippet

snippet nu "number"
${3:let} ${1:varName}: number = ${2:10};
endsnippet

snippet bl "boolean"
${3:let} ${1:varName}: boolean = ${2:flase};
endsnippet
 
snippet any "any"
${3:let} ${1:varName}: any = ${2:value};
endsnippet
 
snippet arr "array"
${4:let} ${1:varName}: ${2:type}[] = [${3:val, val}];
endsnippet

snippet fun "function"
let ${1:funName}: Function = (${2:}) => {${3:}};
endsnippet

snippet getterSetter "Property w/ getter setter" bm
private _${1:propName}: ${2:propType};

get $1(): $2 {
	return this._$1;
}

set $1($1: $2) {
	this._$1 = $1;
}
endsnippet

snippet qm "quick mock"
const mock${1:MOCK}: ${2:mockType} = mock(${3:Object});
when(mock$1.${4:}).thenReturn(${5:mockReturn});
const stub$1: $2 = instance(mock$1);
endsnippet

snippet res "quick resolve a promise"
${3:}Promise.resolve(${1:})${2:;}
endsnippet
	
snippet rej "quick reject a promise"
${3:}Promise.reject(${1:})${2:;}
endsnippet
